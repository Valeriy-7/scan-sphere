"use strict";(()=>{var e={};e.id=772,e.ids=[772],e.modules={3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},12207:(e,r,t)=>{t.r(r),t.d(r,{patchFetch:()=>h,routeModule:()=>d,serverHooks:()=>l,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>x});var s={};t.r(s),t.d(s,{GET:()=>u});var a=t(96559),o=t(48088),n=t(37719),i=t(32190),p=t(97151);async function u(){try{return await p.A.$queryRaw`SELECT 1`,i.NextResponse.json({status:"ok",message:"Service is healthy",database:"connected"},{status:200})}catch(e){return console.error("Health check failed:",e),i.NextResponse.json({status:"error",message:"Database connection failed",error:e.message},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"/Users/biveki/Desktop/Projects/openparsersferav/src/app/api/health/route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:x,serverHooks:l}=d;function h(){return(0,n.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:x})}},21820:e=>{e.exports=require("os")},28354:e=>{e.exports=require("util")},29021:e=>{e.exports=require("fs")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{e.exports=require("path")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},79646:e=>{e.exports=require("child_process")},79748:e=>{e.exports=require("fs/promises")},83997:e=>{e.exports=require("tty")},84297:e=>{e.exports=require("async_hooks")},94735:e=>{e.exports=require("events")}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[447,580,363],()=>t(12207));module.exports=s})();